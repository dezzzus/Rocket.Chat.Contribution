# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install Meteor
          command: if [ ! -e "$HOME/.meteor/meteor" ]; then curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh; fi
          filters:
            branches:
              only: color-variables

      # Download and cache dependencies
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          filters:
            branches:
              only: color-variables

      - run:
          name: Build Rocket.Chat
          command: |
            meteor npm install
            set +e
            meteor add rocketchat:lib
            set -e
            meteor build --server-only --directory /tmp/build
          filters:
            branches:
              only: color-variables

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./.meteor
            - $HOME/.meteor
          filters:
            branches:
              only: color-variables

      - setup_remote_docker

      - run:
          name: Build Docker image
          command: |
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            cp .circleci/Dockerfile /tmp/build
            cd /tmp/build
            docker build -t rocketchat/rocket.chat:designpreview .
            docker push rocketchat/rocket.chat:designpreview
          filters:
            branches:
              only: color-variables
      - run:
          name: Notify on demo
          command: |
            set -x
            curl -X POST -H 'Content-Type: application/json' --data "{'text':'@here Nova [build](${CIRCLE_BUILD_URL}) pronta\!'}" $WEBHOOK_URL
          filters:
            branches:
              only: color-variables
